// ----------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a compiler emitter: FACTS.Framework.Analysis.Generators.OperationMethod.ProxyEmitter
//
// Changes to this file may cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
// ----------------------------------------------------------------------------------------------------

using System;
using System.Threading.Tasks;
using FACTS.Framework.Web;

namespace PFML.Web.ServiceProxies.Core.Headers
{

    public static class AgencyProxy
    {

        ///<summary>URL base path location for web service</summary>
        private const string servicePath = "Core/Headers/Agency";

        ///<summary>ASYNC Web Service call: unknown</summary>
        ///<returns>ASYNC task: unknown</returns>
        public static async Task<PFML.Shared.ViewModels.Core.Headers.Agency.SearchCriteria> BlankSearchCriteriaAsync()
        {
            using (OperationClient client = new OperationClient(servicePath, "BlankSearchCriteria"))
            {
                return await client.ReadAsync<PFML.Shared.ViewModels.Core.Headers.Agency.SearchCriteria>();
            }
        }

        ///<summary>Web Service call: unknown</summary>
        public static PFML.Shared.ViewModels.Core.Headers.Agency.SearchCriteria BlankSearchCriteria()
        {
            return BlankSearchCriteriaAsync().Result;
        }

        ///<summary>ASYNC Web Service call: unknown</summary>
        ///<returns>ASYNC task: unknown</returns>
        public static async Task<System.Collections.Generic.List<PFML.Shared.ViewModels.Core.Headers.Agency.ResultRecord>> SearchAsync(PFML.Shared.ViewModels.Core.Headers.Agency.SearchCriteria criteria)
        {
            using (OperationClient client = new OperationClient(servicePath, "Search"))
            {
                client.Value = criteria;
                return await client.ReadAsync<System.Collections.Generic.List<PFML.Shared.ViewModels.Core.Headers.Agency.ResultRecord>>();
            }
        }

        ///<summary>Web Service call: unknown</summary>
        public static System.Collections.Generic.List<PFML.Shared.ViewModels.Core.Headers.Agency.ResultRecord> Search(PFML.Shared.ViewModels.Core.Headers.Agency.SearchCriteria criteria)
        {
            return SearchAsync(criteria).Result;
        }

        ///<summary>ASYNC Web Service call: unknown</summary>
        ///<returns>ASYNC task: unknown</returns>
        public static async Task<PFML.Shared.ViewModels.Core.Headers.Agency.Record> FetchAsync(int id)
        {
            using (OperationClient client = new OperationClient(servicePath, "Fetch"))
            {
                client.Value = id;
                return await client.ReadAsync<PFML.Shared.ViewModels.Core.Headers.Agency.Record>();
            }
        }

        ///<summary>Web Service call: unknown</summary>
        public static PFML.Shared.ViewModels.Core.Headers.Agency.Record Fetch(int id)
        {
            return FetchAsync(id).Result;
        }

    }

}
