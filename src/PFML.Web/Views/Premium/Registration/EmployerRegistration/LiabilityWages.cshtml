@Html.Partial("WizardHeader", Machine["ListSection"], new ViewDataDictionary(this.ViewData) { { "current", Machine["CurrentSection"] }, { "showHeader", Machine["ShowHeader"] } })

@using (Form())
{
    @using (Panel(headingText: "Employment Liability - Wages", defaultControlColumns: 4, defaultLabelColumns: 4))
    {
        @RadioButtonGroup(labelText: "During the current calendar year or the preceding four calendar years, was there any calendar quarter in which this employer paid wages of at least $450 for covered service in non-agricultural (regular) employment?", lookupName: LookupTable.BoolYesNo, lookupSort: "{DisplaySortOrder}", dataSource: "EmployerRegistration.EmployerDto.EmployerLiability.HasPaid450RegularWages", required: "true")
        @RadioButtonGroup(labelText: "During the current calendar year or the preceding four calendar years, was there any calendar quarter in which this employer paid wages of $20,000 or more for agricultural labor?", lookupName: LookupTable.BoolYesNo, lookupSort: "{DisplaySortOrder}", dataSource: "EmployerRegistration.EmployerDto.EmployerLiability.HasPaid20KAgriculturalLaborWages", required: "true")
        @RadioButtonGroup(labelText: "During the current calendar year or the preceding four calendar years, was there any calendar quarter in which this employer paid wages of $1,000 or more for domestic service in a private home, local college club or local chapter of a college fraternity or sorority?", lookupName: LookupTable.BoolYesNo, lookupSort: "{DisplaySortOrder}", dataSource: "EmployerRegistration.EmployerDto.EmployerLiability.HasPaid1KDomesticWages", required: "true")
        @SelectBox(labelText: "If yes to any of the above, select the quarter and year during which this amount was first met:", dataSource: "EmployerRegistration.EmployerDto.EmployerLiability.LiabilityAmountMetYear", securityFilter: "EmployerRegistration.EmployerDto.EmployerLiability.HasPaid450RegularWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid20KAgriculturalLaborWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid1KDomesticWages=='Y'", required: "EmployerRegistration.EmployerDto.EmployerLiability.HasPaid450RegularWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid20KAgriculturalLaborWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid1KDomesticWages=='Y'", labelColumns: 4, controlColumns: 2, items: (List<FACTS.Framework.Support.HtmlValueText>)Machine["YearList"], blankItemText: "Year")
        @SelectBox(labelText: "", dataSource: "EmployerRegistration.EmployerDto.EmployerLiability.LiabilityAmountMetQuarter", securityFilter: "EmployerRegistration.EmployerDto.EmployerLiability.HasPaid450RegularWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid20KAgriculturalLaborWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid1KDomesticWages=='Y'", required: "EmployerRegistration.EmployerDto.EmployerLiability.HasPaid450RegularWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid20KAgriculturalLaborWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid1KDomesticWages=='Y'", blankItemText: "Enter Quarter", lookupName: LookupTable.Quarter, labelColumns: 0, controlColumns: 2, lookupSort: "{DisplaySortOrder}")
        @TextBox(labelText: "If yes to any of the above, provide the total gross wages (paid to date) within the selected quarter:", formatter: Formatter.Currency, dataSource: "EmployerRegistration.EmployerDto.EmployerLiability.GrossWagesPaid", securityFilter: "EmployerRegistration.EmployerDto.EmployerLiability.HasPaid450RegularWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid20KAgriculturalLaborWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid1KDomesticWages=='Y'", required: "EmployerRegistration.EmployerDto.EmployerLiability.HasPaid450RegularWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid20KAgriculturalLaborWages=='Y' || EmployerRegistration.EmployerDto.EmployerLiability.HasPaid1KDomesticWages=='Y'")
    }

    @using (Panel(borderVisible: false, panelLayout: PanelLayout.Inline, cssClass: "text-center"))
    {
        @Button(transition: "Previous")
        @Button(transition: "Next")
    }
}